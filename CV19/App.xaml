<Application x:Class="CV19.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CV19"
             StartupUri="Views/Windows/MainWindow.xaml">
    <Application.Resources>
        <!--Стили умеют наследованться друг от друга. Вот базовый стиль кнопки:-->
        <!--<Style x:Key="BtnBase" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
        </Style>-->

        <!--В качестве типа данных стиля можно указывать не Button, а ButtonBase (базовый класс кнопки). В этом случае данный стиль можно будет применить не только к классу Button,
        но и ToggleButton (залипающая кнопка):--><!--
        <Style x:Key="BtnBase" TargetType="ButtonBase">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        --><!--Определение стиля всех кнопок на уровне всего приложения:--><!--
        <Style TargetType="Button">
            <Setter Property="Background" Value="White"/>
        </Style>-->
        
        <!--После создания базового стиля, наследуем от него стиль по умолчанию для нашей кнопки:--><!--
        <Style TargetType="Button" BasedOn="{StaticResource BtnBase}"/>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource BtnBase}"/>

        --><!--<Style x:Key="PrimaryBtn" TargetType="Button">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
        </Style>
        
        <Style x:Key="DengerBtn" TargetType="Button">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>--><!--

        <Style x:Key="PrimaryBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="DengerBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>-->
        
        <!--Кроме того, все стили могут находиться в отдельном словаре ресурсов. Для этого создадим папку: Resources/Styles и добавил туда словарь ресурсов WPF. В него перенесём весь вышеизложенный код.-->

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--Подключим словарь ресурсов Brushes на уровне всего приложения:-->
                <ResourceDictionary Source="Resources/Base/Brushes.xaml"/>
                
                <ResourceDictionary Source="Resources/Styles/Buttons.xaml"/>
                <ResourceDictionary Source="Resources/Styles/GridSplitters.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
